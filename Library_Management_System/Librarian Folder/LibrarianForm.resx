<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//9k=
</value>
  </data>
</root>